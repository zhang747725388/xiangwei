; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\gsensor.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\gsensor.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP\GPS -I..\BSP\Sim900A -I..\BSP -I..\BSP\IWDG -I..\BSP\BlueTooth -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\BSP\Adxl345 -I..\BSP\TL718 -I..\BSP\PAM8403 -I..\BSP\W25X16 -I..\BSP\USB -I..\App\Debug -I..\App\SelfCheck -I..\App\GPSTask -I..\App\OBD -I..\App\Mems -I..\App\Voltage -I..\App\LKClient -I..\App\Paramlist -I..\App\ATC30 -I..\App -I..\BSP\mpu6050 -I..\App\mid-proc -I..\App\mpu6050Task -I..\BSP\dmp -I..\BSP\Bluetooth -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\gsensor.crf ..\App\mpu6050Task\gSensor.c]
                          THUMB

                          AREA ||i.gSensor_Init||, CODE, READONLY, ALIGN=2

                  gSensor_Init PROC
;;;20     
;;;21     void gSensor_Init(void)
000000  b510              PUSH     {r4,lr}
;;;22     {
;;;23     	u8 icnt = 0;								//传感器初始化――计数器(由于存在初始化失败的问题，未知缘由);
000002  2400              MOVS     r4,#0
;;;24     	
;;;25     	dmp_Status = 2;							//初始化成功与否的标志位：1――OK；其他――fail；
000004  2002              MOVS     r0,#2
000006  4913              LDR      r1,|L1.84|
000008  7008              STRB     r0,[r1,#0]
;;;26     
;;;27     	i2cInit();
00000a  f7fffffe          BL       i2cInit
;;;28     	Timer_Delayms(2);
00000e  2002              MOVS     r0,#2
000010  f7fffffe          BL       Timer_Delayms
;;;29     	
;;;30     	Timer_Set(&MEMSSampleTim, 20);
000014  2114              MOVS     r1,#0x14
000016  4810              LDR      r0,|L1.88|
000018  f7fffffe          BL       Timer_Set
;;;31     
;;;32     
;;;33     	/*****************
;;;34     	**mpu6050初始化(包括dmp运动引擎的初始化)**
;;;35     	*******************/	
;;;36     	while( (dmp_Status != 1) && (icnt < 3) ){
00001c  e005              B        |L1.42|
                  |L1.30|
;;;37     		dmp_Status = dmp_init();
00001e  f7fffffe          BL       dmp_init
000022  490c              LDR      r1,|L1.84|
000024  7008              STRB     r0,[r1,#0]
;;;38     		icnt++;
000026  1c60              ADDS     r0,r4,#1
000028  b2c4              UXTB     r4,r0
                  |L1.42|
00002a  480a              LDR      r0,|L1.84|
00002c  7800              LDRB     r0,[r0,#0]            ;36  ; dmp_Status
00002e  2801              CMP      r0,#1                 ;36
000030  d001              BEQ      |L1.54|
000032  2c03              CMP      r4,#3                 ;36
000034  dbf3              BLT      |L1.30|
                  |L1.54|
;;;39     	}
;;;40     
;;;41     	if( icnt == 3 ){
;;;42     //		DebugUart_Putstr("mpu6050 init fail!!!!! ......\n");
;;;43     	}
;;;44     	/************************************************************
;;;45     	*************************************************************/
;;;46     	
;;;47     	/*********应用程序的初始化操作***********/
;;;48     	turn_Init();				//急转弯应用判断程序参数初始化
000036  f7fffffe          BL       turn_Init
;;;49     	
;;;50     	quietJudge_Init();
00003a  f7fffffe          BL       quietJudge_Init
;;;51     	Init_CyQueue(&quietTwoAlarm);
00003e  4807              LDR      r0,|L1.92|
000040  f7fffffe          BL       Init_CyQueue
;;;52     	Init_CyQueue(&quake_Alarm);
000044  4806              LDR      r0,|L1.96|
000046  f7fffffe          BL       Init_CyQueue
;;;53     	Init_CyQueue(&turn_Alarm);
00004a  4806              LDR      r0,|L1.100|
00004c  f7fffffe          BL       Init_CyQueue
;;;54     }
000050  bd10              POP      {r4,pc}
;;;55     
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      dmp_Status
                  |L1.88|
                          DCD      MEMSSampleTim
                  |L1.92|
                          DCD      quietTwoAlarm
                  |L1.96|
                          DCD      quake_Alarm
                  |L1.100|
                          DCD      turn_Alarm

                          AREA ||i.gSensor_Task||, CODE, READONLY, ALIGN=2

                  gSensor_Task PROC
;;;61     
;;;62     void gSensor_Task(void)
000000  b510              PUSH     {r4,lr}
;;;63     {	
;;;64     	
;;;65     	/*************g-sensor取值――――2min无震动判断，震动告警、急转弯判断******************/
;;;66     	if( Timer_GetReached(&MEMSSampleTim) == bTRUE )	{		
000002  480c              LDR      r0,|L2.52|
000004  f7fffffe          BL       Timer_GetReached
000008  2801              CMP      r0,#1
00000a  d111              BNE      |L2.48|
;;;67     			
;;;68     			quiet_judgment();							/** 2min无震动判断 **/
00000c  f7fffffe          BL       quiet_judgment
;;;69     			quake_judgement();						/** 震动告警判断 **/
000010  f7fffffe          BL       quake_judgement
;;;70     			if( mpu6050_Dataanl() == 0 ){
000014  f7fffffe          BL       mpu6050_Dataanl
000018  b930              CBNZ     r0,|L2.40|
;;;71     				if( Read_turnJudgeSta() == 0 ){
00001a  f7fffffe          BL       Read_turnJudgeSta
00001e  b918              CBNZ     r0,|L2.40|
;;;72     						turn_Analysis(200,45); 
000020  212d              MOVS     r1,#0x2d
000022  20c8              MOVS     r0,#0xc8
000024  f7fffffe          BL       turn_Analysis
                  |L2.40|
;;;73     				}													/** 急转弯判断 **/
;;;74     
;;;75     			}
;;;76     			Timer_Set(&MEMSSampleTim,5);
000028  2105              MOVS     r1,#5
00002a  4802              LDR      r0,|L2.52|
00002c  f7fffffe          BL       Timer_Set
                  |L2.48|
;;;77     	}
;;;78     	
;;;79     	
;;;80     	/***************急加速、急减速判断*******************************/
;;;81       /**   *******   **/
;;;82     }
000030  bd10              POP      {r4,pc}
;;;83     
                          ENDP

000032  0000              DCW      0x0000
                  |L2.52|
                          DCD      MEMSSampleTim

                          AREA ||i.getGsensInit_Sta||, CODE, READONLY, ALIGN=2

                  getGsensInit_Sta PROC
;;;55     
;;;56     u8 getGsensInit_Sta(void)
000000  4801              LDR      r0,|L3.8|
;;;57     {
;;;58     	return dmp_Status;
000002  7800              LDRB     r0,[r0,#0]  ; dmp_Status
;;;59     }
000004  4770              BX       lr
;;;60     
                          ENDP

000006  0000              DCW      0x0000
                  |L3.8|
                          DCD      dmp_Status

                          AREA ||.bss||, DATA, NOINIT, ALIGN=1

                  quietTwoAlarm
                          %        12
                  quake_Alarm
                          %        12
                  turn_Alarm
                          %        12

                          AREA ||.data||, DATA, ALIGN=2

                  gyro_orientation
000000  ff000000          DCB      0xff,0x00,0x00,0x00
000004  ff000000          DCB      0xff,0x00,0x00,0x00
000008  01000000          DCB      0x01,0x00,0x00,0x00
                  MEMSSampleTim
                          %        8
                  dmp_Status
000014  00                DCB      0x00
