; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\cqueue_1.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\cqueue_1.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP\GPS -I..\BSP\Sim900A -I..\BSP -I..\BSP\IWDG -I..\BSP\BlueTooth -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\BSP\Adxl345 -I..\BSP\TL718 -I..\BSP\PAM8403 -I..\BSP\W25X16 -I..\BSP\USB -I..\App\Debug -I..\App\SelfCheck -I..\App\GPSTask -I..\App\OBD -I..\App\Mems -I..\App\Voltage -I..\App\LKClient -I..\App\Paramlist -I..\App\ATC30 -I..\App -I..\BSP\mpu6050 -I..\App\mid-proc -I..\App\mpu6050Task -I..\BSP\dmp -I..\BSP\Bluetooth -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\cqueue_1.crf ..\App\mid-proc\cQueue_1.c]
                          THUMB

                          AREA ||i.Empty_CyQueue||, CODE, READONLY, ALIGN=1

                  Empty_CyQueue PROC
;;;8      
;;;9      int Empty_CyQueue(CyQueue *q)
000000  4601              MOV      r1,r0
;;;10     {
;;;11     	return q->rear == q->front; 
000002  7ac8              LDRB     r0,[r1,#0xb]
000004  7a8a              LDRB     r2,[r1,#0xa]
000006  4290              CMP      r0,r2
000008  d101              BNE      |L1.14|
00000a  2001              MOVS     r0,#1
                  |L1.12|
;;;12     }
00000c  4770              BX       lr
                  |L1.14|
00000e  2000              MOVS     r0,#0                 ;11
000010  e7fc              B        |L1.12|
;;;13     
                          ENDP


                          AREA ||i.Front_CyQueue||, CODE, READONLY, ALIGN=1

                  Front_CyQueue PROC
;;;43     
;;;44     void Front_CyQueue(CyQueue *q,ElemType *x)
000000  b510              PUSH     {r4,lr}
;;;45     {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;46     	
;;;47     	if(Empty_CyQueue(q))
000006  4618              MOV      r0,r3
000008  f7fffffe          BL       Empty_CyQueue
00000c  b100              CBZ      r0,|L2.16|
                  |L2.14|
;;;48     	{
;;;49     		return ;
;;;50     	}else
;;;51     	{
;;;52     		*x = q->data[q->front];
;;;53     	}
;;;54     }
00000e  bd10              POP      {r4,pc}
                  |L2.16|
000010  7a98              LDRB     r0,[r3,#0xa]          ;52
000012  f8330010          LDRH     r0,[r3,r0,LSL #1]     ;52
000016  8020              STRH     r0,[r4,#0]            ;52
000018  bf00              NOP      
00001a  e7f8              B        |L2.14|
;;;55     
                          ENDP


                          AREA ||i.Full_CyQueue||, CODE, READONLY, ALIGN=1

                  Full_CyQueue PROC
;;;13     
;;;14     int Full_CyQueue(CyQueue *q)
000000  4601              MOV      r1,r0
;;;15     {
;;;16     	return (q->rear + 1) % MAXSIZE == q->front;
000002  7ac8              LDRB     r0,[r1,#0xb]
000004  1c40              ADDS     r0,r0,#1
000006  2205              MOVS     r2,#5
000008  fb90f3f2          SDIV     r3,r0,r2
00000c  fb020013          MLS      r0,r2,r3,r0
000010  7a8a              LDRB     r2,[r1,#0xa]
000012  4290              CMP      r0,r2
000014  d101              BNE      |L3.26|
000016  2001              MOVS     r0,#1
                  |L3.24|
;;;17     }
000018  4770              BX       lr
                  |L3.26|
00001a  2000              MOVS     r0,#0                 ;16
00001c  e7fc              B        |L3.24|
;;;18     
                          ENDP


                          AREA ||i.In_CyQueue||, CODE, READONLY, ALIGN=1

                  In_CyQueue PROC
;;;23     
;;;24     void In_CyQueue(CyQueue *q, ElemType x)
000000  b530              PUSH     {r4,r5,lr}
;;;25     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;26     	if(Full_CyQueue(q))
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       Full_CyQueue
00000c  b100              CBZ      r0,|L4.16|
                  |L4.14|
;;;27     	{
;;;28     		return ;
;;;29     	}
;;;30     	q->data[q->rear] = x;
;;;31     	q->rear = (q->rear + 1) % MAXSIZE;
;;;32     }
00000e  bd30              POP      {r4,r5,pc}
                  |L4.16|
000010  7ae0              LDRB     r0,[r4,#0xb]          ;30
000012  f8245010          STRH     r5,[r4,r0,LSL #1]     ;30
000016  7ae0              LDRB     r0,[r4,#0xb]          ;31
000018  1c40              ADDS     r0,r0,#1              ;31
00001a  2105              MOVS     r1,#5                 ;31
00001c  fb90f2f1          SDIV     r2,r0,r1              ;31
000020  fb010012          MLS      r0,r1,r2,r0           ;31
000024  72e0              STRB     r0,[r4,#0xb]          ;31
000026  bf00              NOP      
000028  e7f1              B        |L4.14|
;;;33     
                          ENDP


                          AREA ||i.Init_CyQueue||, CODE, READONLY, ALIGN=1

                  Init_CyQueue PROC
;;;3      
;;;4      void Init_CyQueue(CyQueue *q)
000000  2100              MOVS     r1,#0
;;;5      {
;;;6      	q->front = q->rear = 0;
000002  72c1              STRB     r1,[r0,#0xb]
000004  7281              STRB     r1,[r0,#0xa]
;;;7      }
000006  4770              BX       lr
;;;8      
                          ENDP


                          AREA ||i.Length_CyQueue||, CODE, READONLY, ALIGN=1

                  Length_CyQueue PROC
;;;18     
;;;19     int Length_CyQueue(CyQueue *q)
000000  4601              MOV      r1,r0
;;;20     {
;;;21     	return (q->rear - q->front + MAXSIZE) % MAXSIZE;
000002  7ac8              LDRB     r0,[r1,#0xb]
000004  7a8a              LDRB     r2,[r1,#0xa]
000006  1a80              SUBS     r0,r0,r2
000008  1d40              ADDS     r0,r0,#5
00000a  2205              MOVS     r2,#5
00000c  fb90f3f2          SDIV     r3,r0,r2
000010  fb020013          MLS      r0,r2,r3,r0
;;;22     }
000014  4770              BX       lr
;;;23     
                          ENDP


                          AREA ||i.Out_CyQueue||, CODE, READONLY, ALIGN=1

                  Out_CyQueue PROC
;;;33     
;;;34     void Out_CyQueue(CyQueue *q, ElemType *x)
000000  b510              PUSH     {r4,lr}
;;;35     {
000002  4603              MOV      r3,r0
000004  460c              MOV      r4,r1
;;;36     	if(Empty_CyQueue(q))
000006  4618              MOV      r0,r3
000008  f7fffffe          BL       Empty_CyQueue
00000c  b100              CBZ      r0,|L7.16|
                  |L7.14|
;;;37     	{
;;;38     		return ;
;;;39     	}
;;;40     	*x = q->data[q->front];
;;;41     	q->front = (q->front + 1) % MAXSIZE;
;;;42     }
00000e  bd10              POP      {r4,pc}
                  |L7.16|
000010  7a98              LDRB     r0,[r3,#0xa]          ;40
000012  f8330010          LDRH     r0,[r3,r0,LSL #1]     ;40
000016  8020              STRH     r0,[r4,#0]            ;40
000018  7a98              LDRB     r0,[r3,#0xa]          ;41
00001a  1c40              ADDS     r0,r0,#1              ;41
00001c  2105              MOVS     r1,#5                 ;41
00001e  fb90f2f1          SDIV     r2,r0,r1              ;41
000022  fb010012          MLS      r0,r1,r2,r0           ;41
000026  7298              STRB     r0,[r3,#0xa]          ;41
000028  bf00              NOP      
00002a  e7f0              B        |L7.14|
;;;43     
                          ENDP

