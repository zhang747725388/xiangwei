; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\mpu6050.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\mpu6050.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP\GPS -I..\BSP\Sim900A -I..\BSP -I..\BSP\IWDG -I..\BSP\BlueTooth -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\BSP\Adxl345 -I..\BSP\TL718 -I..\BSP\PAM8403 -I..\BSP\W25X16 -I..\BSP\USB -I..\App\Debug -I..\App\SelfCheck -I..\App\GPSTask -I..\App\OBD -I..\App\Mems -I..\App\Voltage -I..\App\LKClient -I..\App\Paramlist -I..\App\ATC30 -I..\App -I..\BSP\mpu6050 -I..\App\mid-proc -I..\App\mpu6050Task -I..\BSP\dmp -I..\BSP\Bluetooth -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\mpu6050.crf ..\BSP\mpu6050.c]
                          THUMB

                          AREA ||i.Enable_MEMSInterrupt||, CODE, READONLY, ALIGN=2

                  Enable_MEMSInterrupt PROC
;;;35     
;;;36     void Enable_MEMSInterrupt(INT8U Data)
000000  b510              PUSH     {r4,lr}
;;;37     {
000002  4604              MOV      r4,r0
;;;38     	if(Data == 0){
000004  b904              CBNZ     r4,|L1.8|
;;;39     		Data = 20;
000006  2414              MOVS     r4,#0x14
                  |L1.8|
;;;40     	}
;;;41      do{
000008  bf00              NOP      
                  |L1.10|
;;;42     			
;;;43     	 
;;;44     		//	HXZ_SoftDelay(20000 );
;;;45     	}while(GPIO_ReadInputDataBit(WAKEUP_PORT,WAKEUP_PIN) == SET );
00000a  2101              MOVS     r1,#1
00000c  4802              LDR      r0,|L1.24|
00000e  f7fffffe          BL       GPIO_ReadInputDataBit
000012  2801              CMP      r0,#1
000014  d0f9              BEQ      |L1.10|
;;;46     }
000016  bd10              POP      {r4,pc}
;;;47     S_INT16_XYZ  MPU6050_ACC_LAST,MPU6050_GYRO_LAST;      
                          ENDP

                  |L1.24|
                          DCD      0x40010800

                          AREA ||i.Init_WakeupPort||, CODE, READONLY, ALIGN=2

                  Init_WakeupPort PROC
;;;21     
;;;22     void Init_WakeupPort(void)
000000  b508              PUSH     {r3,lr}
;;;23     {
;;;24     		GPIO_InitTypeDef GPIO_InitStructure;
;;;25     		
;;;26     		RCC_APB2PeriphClockCmd(WAKEUP_RCC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2004              MOVS     r0,#4
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;27     		 
;;;28     		GPIO_InitStructure.GPIO_Pin = WAKEUP_PIN;
00000a  2001              MOVS     r0,#1
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;29     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPD;
000010  2028              MOVS     r0,#0x28
000012  f88d0003          STRB     r0,[sp,#3]
;;;30     		GPIO_Init(WAKEUP_PORT, &GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  4805              LDR      r0,|L2.48|
00001a  f7fffffe          BL       GPIO_Init
;;;31     		
;;;32     		RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);
00001e  2101              MOVS     r1,#1
000020  0708              LSLS     r0,r1,#28
000022  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;33     		PWR_WakeUpPinCmd(ENABLE);	
000026  2001              MOVS     r0,#1
000028  f7fffffe          BL       PWR_WakeUpPinCmd
;;;34     }
00002c  bd08              POP      {r3,pc}
;;;35     
                          ENDP

00002e  0000              DCW      0x0000
                  |L2.48|
                          DCD      0x40010800

                          AREA ||i.Mems1_Filter||, CODE, READONLY, ALIGN=1

                  Mems1_Filter PROC
;;;104    
;;;105    static void Mems1_Filter(S_INT16_XYZ *last, S_INT16_XYZ *before,float filter_factor)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;106    {
000004  4604              MOV      r4,r0
000006  460d              MOV      r5,r1
000008  4616              MOV      r6,r2
;;;107    	last->x = last->x * filter_factor + before->x * (1 - filter_factor);
00000a  4631              MOV      r1,r6
00000c  f04f507e          MOV      r0,#0x3f800000
000010  f7fffffe          BL       __aeabi_fsub
000014  4682              MOV      r10,r0
000016  f9b50000          LDRSH    r0,[r5,#0]
00001a  f7fffffe          BL       __aeabi_i2f
00001e  4683              MOV      r11,r0
000020  4651              MOV      r1,r10
000022  f7fffffe          BL       __aeabi_fmul
000026  4680              MOV      r8,r0
000028  f9b40000          LDRSH    r0,[r4,#0]
00002c  f7fffffe          BL       __aeabi_i2f
000030  4682              MOV      r10,r0
000032  4631              MOV      r1,r6
000034  f7fffffe          BL       __aeabi_fmul
000038  4681              MOV      r9,r0
00003a  4641              MOV      r1,r8
00003c  f7fffffe          BL       __aeabi_fadd
000040  4607              MOV      r7,r0
000042  f7fffffe          BL       __aeabi_f2iz
000046  b200              SXTH     r0,r0
000048  8020              STRH     r0,[r4,#0]
;;;108    	last->y = last->y * filter_factor + before->y * (1 - filter_factor);
00004a  4631              MOV      r1,r6
00004c  f04f507e          MOV      r0,#0x3f800000
000050  f7fffffe          BL       __aeabi_fsub
000054  4682              MOV      r10,r0
000056  f9b50002          LDRSH    r0,[r5,#2]
00005a  f7fffffe          BL       __aeabi_i2f
00005e  4683              MOV      r11,r0
000060  4651              MOV      r1,r10
000062  f7fffffe          BL       __aeabi_fmul
000066  4680              MOV      r8,r0
000068  f9b40002          LDRSH    r0,[r4,#2]
00006c  f7fffffe          BL       __aeabi_i2f
000070  4682              MOV      r10,r0
000072  4631              MOV      r1,r6
000074  f7fffffe          BL       __aeabi_fmul
000078  4681              MOV      r9,r0
00007a  4641              MOV      r1,r8
00007c  f7fffffe          BL       __aeabi_fadd
000080  4607              MOV      r7,r0
000082  f7fffffe          BL       __aeabi_f2iz
000086  b200              SXTH     r0,r0
000088  8060              STRH     r0,[r4,#2]
;;;109    	last->z = last->z * filter_factor + before->z * (1 - filter_factor);
00008a  4631              MOV      r1,r6
00008c  f04f507e          MOV      r0,#0x3f800000
000090  f7fffffe          BL       __aeabi_fsub
000094  4682              MOV      r10,r0
000096  f9b50004          LDRSH    r0,[r5,#4]
00009a  f7fffffe          BL       __aeabi_i2f
00009e  4683              MOV      r11,r0
0000a0  4651              MOV      r1,r10
0000a2  f7fffffe          BL       __aeabi_fmul
0000a6  4680              MOV      r8,r0
0000a8  f9b40004          LDRSH    r0,[r4,#4]
0000ac  f7fffffe          BL       __aeabi_i2f
0000b0  4682              MOV      r10,r0
0000b2  4631              MOV      r1,r6
0000b4  f7fffffe          BL       __aeabi_fmul
0000b8  4681              MOV      r9,r0
0000ba  4641              MOV      r1,r8
0000bc  f7fffffe          BL       __aeabi_fadd
0000c0  4607              MOV      r7,r0
0000c2  f7fffffe          BL       __aeabi_f2iz
0000c6  b200              SXTH     r0,r0
0000c8  80a0              STRH     r0,[r4,#4]
;;;110    }
0000ca  e8bd9ff0          POP      {r4-r12,pc}
;;;111    
                          ENDP


                          AREA ||i.Mems_Set||, CODE, READONLY, ALIGN=1

                  Mems_Set PROC
;;;97     
;;;98     void Mems_Set(S_INT16_XYZ *before, S_INT16_XYZ *last)
000000  880a              LDRH     r2,[r1,#0]
;;;99     {
;;;100    	before->x = last->x;
000002  8002              STRH     r2,[r0,#0]
;;;101    	before->y = last->y;
000004  884a              LDRH     r2,[r1,#2]
000006  8042              STRH     r2,[r0,#2]
;;;102    	before->z = last->z;
000008  888a              LDRH     r2,[r1,#4]
00000a  8082              STRH     r2,[r0,#4]
;;;103    }
00000c  4770              BX       lr
;;;104    
                          ENDP


                          AREA ||i.mpu6050_Dataanl||, CODE, READONLY, ALIGN=2

                  mpu6050_Dataanl PROC
;;;53     
;;;54     int8_t mpu6050_Dataanl(void)
000000  b510              PUSH     {r4,lr}
;;;55     {
000002  b086              SUB      sp,sp,#0x18
;;;56     	short 	temp1[3];
;;;57     	short 	temp2[3];
;;;58     	short 	temp3;
;;;59     	uint8_t get_OK = 2;
000004  2402              MOVS     r4,#2
;;;60     
;;;61     	if( getGsensInit_Sta() == 1 ){
000006  f7fffffe          BL       getGsensInit_Sta
00000a  2801              CMP      r0,#1
00000c  d102              BNE      |L5.20|
;;;62     		get_OK = dmpTask();
00000e  f7fffffe          BL       dmpTask
000012  4604              MOV      r4,r0
                  |L5.20|
;;;63     	}
;;;64     
;;;65     	if( get_OK == 0 ){
000014  2c00              CMP      r4,#0
000016  d146              BNE      |L5.166|
;;;66     
;;;67     		mpu_get_accel_reg( temp1, NULL );
000018  2100              MOVS     r1,#0
00001a  a804              ADD      r0,sp,#0x10
00001c  f7fffffe          BL       mpu_get_accel_reg
;;;68     		MPU6050_ACC_LAST.x = temp1[0];
000020  f8bd0010          LDRH     r0,[sp,#0x10]
000024  4921              LDR      r1,|L5.172|
000026  8008              STRH     r0,[r1,#0]
;;;69     		MPU6050_ACC_LAST.y = temp1[1];
000028  f8bd0012          LDRH     r0,[sp,#0x12]
00002c  8048              STRH     r0,[r1,#2]
;;;70     		MPU6050_ACC_LAST.z = temp1[2];
00002e  f8bd0014          LDRH     r0,[sp,#0x14]
000032  8088              STRH     r0,[r1,#4]
;;;71     
;;;72     		mpu_get_gyro_reg( temp2, NULL );
000034  2100              MOVS     r1,#0
000036  a802              ADD      r0,sp,#8
000038  f7fffffe          BL       mpu_get_gyro_reg
;;;73     		MPU6050_GYRO_LAST.x = temp2[0];
00003c  f8bd0008          LDRH     r0,[sp,#8]
000040  491b              LDR      r1,|L5.176|
000042  8008              STRH     r0,[r1,#0]
;;;74     		MPU6050_GYRO_LAST.y = temp2[1];
000044  f8bd000a          LDRH     r0,[sp,#0xa]
000048  8048              STRH     r0,[r1,#2]
;;;75     		MPU6050_GYRO_LAST.z = temp2[2];
00004a  f8bd000c          LDRH     r0,[sp,#0xc]
00004e  8088              STRH     r0,[r1,#4]
;;;76     
;;;77     		mpu_get_temperature( &temp3, NULL );
000050  2100              MOVS     r1,#0
000052  a801              ADD      r0,sp,#4
000054  f7fffffe          BL       mpu_get_temperature
;;;78     		MPU6050_TEMPER = temp3;
000058  f9bd0004          LDRSH    r0,[sp,#4]
00005c  4915              LDR      r1,|L5.180|
00005e  8008              STRH     r0,[r1,#0]
;;;79     		
;;;80     		if( is_First ) {
000060  4815              LDR      r0,|L5.184|
000062  7800              LDRB     r0,[r0,#0]  ; is_First
000064  b150              CBZ      r0,|L5.124|
;;;81     			Mems_Set(&MPU6050_ACC_BEFORE, &MPU6050_ACC_LAST);
000066  4911              LDR      r1,|L5.172|
000068  4814              LDR      r0,|L5.188|
00006a  f7fffffe          BL       Mems_Set
;;;82     			Mems_Set(&MPU6050_GYRO_BEFORE, &MPU6050_GYRO_LAST);
00006e  4910              LDR      r1,|L5.176|
000070  4813              LDR      r0,|L5.192|
000072  f7fffffe          BL       Mems_Set
;;;83     			is_First = 0;
000076  2000              MOVS     r0,#0
000078  490f              LDR      r1,|L5.184|
00007a  7008              STRB     r0,[r1,#0]
                  |L5.124|
;;;84     		}
;;;85     
;;;86     		Mems1_Filter(&MPU6050_ACC_LAST, &MPU6050_ACC_BEFORE, 0.7);
00007c  4a11              LDR      r2,|L5.196|
00007e  490f              LDR      r1,|L5.188|
000080  480a              LDR      r0,|L5.172|
000082  f7fffffe          BL       Mems1_Filter
;;;87     		Mems1_Filter(&MPU6050_GYRO_LAST, &MPU6050_GYRO_BEFORE, 0.3);
000086  4a10              LDR      r2,|L5.200|
000088  490d              LDR      r1,|L5.192|
00008a  4809              LDR      r0,|L5.176|
00008c  f7fffffe          BL       Mems1_Filter
;;;88     
;;;89     		Mems_Set(&MPU6050_ACC_BEFORE, &MPU6050_ACC_LAST);
000090  4906              LDR      r1,|L5.172|
000092  480a              LDR      r0,|L5.188|
000094  f7fffffe          BL       Mems_Set
;;;90     		Mems_Set(&MPU6050_GYRO_BEFORE, &MPU6050_GYRO_LAST);
000098  4905              LDR      r1,|L5.176|
00009a  4809              LDR      r0,|L5.192|
00009c  f7fffffe          BL       Mems_Set
;;;91     
;;;92     		return 0;
0000a0  2000              MOVS     r0,#0
                  |L5.162|
;;;93     	}else {
;;;94     		return -1;
;;;95     	}
;;;96     }
0000a2  b006              ADD      sp,sp,#0x18
0000a4  bd10              POP      {r4,pc}
                  |L5.166|
0000a6  f04f30ff          MOV      r0,#0xffffffff        ;94
0000aa  e7fa              B        |L5.162|
;;;97     
                          ENDP

                  |L5.172|
                          DCD      MPU6050_ACC_LAST
                  |L5.176|
                          DCD      MPU6050_GYRO_LAST
                  |L5.180|
                          DCD      MPU6050_TEMPER
                  |L5.184|
                          DCD      is_First
                  |L5.188|
                          DCD      MPU6050_ACC_BEFORE
                  |L5.192|
                          DCD      MPU6050_GYRO_BEFORE
                  |L5.196|
                          DCD      0x3f333333
                  |L5.200|
                          DCD      0x3e99999a

                          AREA ||.data||, DATA, ALIGN=1

                  gyro_orientation
000000  ff000000          DCB      0xff,0x00,0x00,0x00
000004  ff000000          DCB      0xff,0x00,0x00,0x00
000008  01                DCB      0x01
                  is_First
000009  01                DCB      0x01
                  MPU6050_ACC_LAST
00000a  0000              DCB      0x00,0x00
                          DCDU     0x00000000
                  MPU6050_GYRO_LAST
                          DCDU     0x00000000
000014  0000              DCB      0x00,0x00
                  MPU6050_ACC_BEFORE
000016  0000              DCB      0x00,0x00
                          DCDU     0x00000000
                  MPU6050_GYRO_BEFORE
                          DCDU     0x00000000
000020  0000              DCB      0x00,0x00
                  GYRO_OFFSET
000022  0000              DCB      0x00,0x00
                          DCDU     0x00000000
                  MPU6050_TEMPER
000028  0000              DCB      0x00,0x00
