; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\tl718.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\tl718.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP\GPS -I..\BSP\Sim900A -I..\BSP -I..\BSP\IWDG -I..\BSP\BlueTooth -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\BSP\Adxl345 -I..\BSP\TL718 -I..\BSP\PAM8403 -I..\BSP\W25X16 -I..\BSP\USB -I..\App\Debug -I..\App\SelfCheck -I..\App\GPSTask -I..\App\OBD -I..\App\Mems -I..\App\Voltage -I..\App\LKClient -I..\App\Paramlist -I..\App\ATC30 -I..\App -I..\BSP\mpu6050 -I..\App\mid-proc -I..\App\mpu6050Task -I..\BSP\dmp -I..\BSP\Bluetooth -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\tl718.crf ..\BSP\TL718\tL718.c]
                          THUMB

                          AREA ||i.Close_OBDPower||, CODE, READONLY, ALIGN=2

                  Close_OBDPower PROC
;;;45     
;;;46     void Close_OBDPower(void)
000000  b508              PUSH     {r3,lr}
;;;47     {
;;;48     	/* 高阻态(浮空输入)关闭OBD电源 */
;;;49     	GPIO_InitTypeDef GPIO_InitStructure;
;;;50     
;;;51     	RCC_APB2PeriphClockCmd(OBD_POWER_RCC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;52     	 
;;;53     	GPIO_InitStructure.GPIO_Pin = OBD_POWER_PIN;
00000a  2020              MOVS     r0,#0x20
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;54     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000010  2004              MOVS     r0,#4
000012  f88d0003          STRB     r0,[sp,#3]
;;;55     	GPIO_Init(OBD_POWER_PORT, &GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  4801              LDR      r0,|L1.32|
00001a  f7fffffe          BL       GPIO_Init
;;;56     	
;;;57     }
00001e  bd08              POP      {r3,pc}
;;;58     
                          ENDP

                  |L1.32|
                          DCD      0x40010c00

                          AREA ||i.ClrOBDUartIO||, CODE, READONLY, ALIGN=2

                  ClrOBDUartIO PROC
;;;61     
;;;62     void ClrOBDUartIO(void)
000000  b508              PUSH     {r3,lr}
;;;63     {
;;;64     	GPIO_InitTypeDef GPIO_InitStructure;
;;;65     
;;;66     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC|RCC_APB2Periph_AFIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  2011              MOVS     r0,#0x11
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;67     	
;;;68     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00000a  2004              MOVS     r0,#4
00000c  f88d0003          STRB     r0,[sp,#3]
;;;69     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
000010  0200              LSLS     r0,r0,#8
000012  f8ad0000          STRH     r0,[sp,#0]
;;;70     	GPIO_Init(GPIOC, &GPIO_InitStructure);
000016  4669              MOV      r1,sp
000018  4806              LDR      r0,|L2.52|
00001a  f7fffffe          BL       GPIO_Init
;;;71     	
;;;72     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
00001e  2004              MOVS     r0,#4
000020  f88d0003          STRB     r0,[sp,#3]
;;;73     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
000024  0240              LSLS     r0,r0,#9
000026  f8ad0000          STRH     r0,[sp,#0]
;;;74     	GPIO_Init(GPIOC, &GPIO_InitStructure);
00002a  4669              MOV      r1,sp
00002c  4801              LDR      r0,|L2.52|
00002e  f7fffffe          BL       GPIO_Init
;;;75     
;;;76     }
000032  bd08              POP      {r3,pc}
;;;77     
                          ENDP

                  |L2.52|
                          DCD      0x40011000

                          AREA ||i.OBD_Disable_RcvIT||, CODE, READONLY, ALIGN=2

                  OBD_Disable_RcvIT PROC
;;;97        Description: 失能OBD接收中断 */
;;;98     void OBD_Disable_RcvIT(void)
000000  b510              PUSH     {r4,lr}
;;;99     {
;;;100    	UART_Config_RxInterrupt(COM_OBD,DISABLE);
000002  2100              MOVS     r1,#0
000004  4801              LDR      r0,|L3.12|
000006  f7fffffe          BL       UART_Config_RxInterrupt
;;;101    }
00000a  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L3.12|
                          DCD      0x40005000

                          AREA ||i.OBD_Enable_RcvIT||, CODE, READONLY, ALIGN=2

                  OBD_Enable_RcvIT PROC
;;;88        Description: 使能OBD接收中断 */
;;;89     void OBD_Enable_RcvIT(void)
000000  b510              PUSH     {r4,lr}
;;;90     {
;;;91     	UART_Config_RxInterrupt(COM_OBD,ENABLE);
000002  2101              MOVS     r1,#1
000004  4801              LDR      r0,|L4.12|
000006  f7fffffe          BL       UART_Config_RxInterrupt
;;;92     
;;;93     }
00000a  bd10              POP      {r4,pc}
;;;94     
                          ENDP

                  |L4.12|
                          DCD      0x40005000

                          AREA ||i.OBD_GetUsartData||, CODE, READONLY, ALIGN=2

                  OBD_GetUsartData PROC
;;;105       Description: OBD中断接收      */
;;;106    void OBD_GetUsartData(BYTE Value)
000000  491a              LDR      r1,|L5.108|
;;;107    {
;;;108    	/* 如果已经有数据 */
;;;109    	if(OBData_bAvail == bTRUE){
000002  7809              LDRB     r1,[r1,#0]  ; OBData_bAvail
000004  2901              CMP      r1,#1
000006  d100              BNE      |L5.10|
                  |L5.8|
;;;110    	    return;
;;;111    	}
;;;112    	
;;;113    	/* 如果缓存溢出 */
;;;114    	if( OBDataLen == OBD_DATA_BUFFER_SIZE)  {					   
;;;115    	    OBDataLen = 0;
;;;116    	}
;;;117    	
;;;118    	if( (OBDataLen > 3) && (Value == 0x3E) && (OBData[OBDataLen-1] == 0x0D) && (OBData[OBDataLen-2] == 0x0D) ){
;;;119    		OBData[OBDataLen++] = Value;
;;;120    		OBData_bAvail = bTRUE;
;;;121    	}else{  
;;;122    		OBData[OBDataLen++] = Value;
;;;123    	}
;;;124    }
000008  4770              BX       lr
                  |L5.10|
00000a  4919              LDR      r1,|L5.112|
00000c  8809              LDRH     r1,[r1,#0]            ;114  ; OBDataLen
00000e  29c8              CMP      r1,#0xc8              ;114
000010  d102              BNE      |L5.24|
000012  2100              MOVS     r1,#0                 ;115
000014  4a16              LDR      r2,|L5.112|
000016  8011              STRH     r1,[r2,#0]            ;115
                  |L5.24|
000018  4915              LDR      r1,|L5.112|
00001a  8809              LDRH     r1,[r1,#0]            ;118  ; OBDataLen
00001c  2903              CMP      r1,#3                 ;118
00001e  dd1a              BLE      |L5.86|
000020  283e              CMP      r0,#0x3e              ;118
000022  d118              BNE      |L5.86|
000024  4912              LDR      r1,|L5.112|
000026  8809              LDRH     r1,[r1,#0]            ;118  ; OBDataLen
000028  1e49              SUBS     r1,r1,#1              ;118
00002a  4a12              LDR      r2,|L5.116|
00002c  5c51              LDRB     r1,[r2,r1]            ;118
00002e  290d              CMP      r1,#0xd               ;118
000030  d111              BNE      |L5.86|
000032  490f              LDR      r1,|L5.112|
000034  8809              LDRH     r1,[r1,#0]            ;118  ; OBDataLen
000036  1e89              SUBS     r1,r1,#2              ;118
000038  5c51              LDRB     r1,[r2,r1]            ;118
00003a  290d              CMP      r1,#0xd               ;118
00003c  d10b              BNE      |L5.86|
00003e  490c              LDR      r1,|L5.112|
000040  880a              LDRH     r2,[r1,#0]            ;119  ; OBDataLen
000042  8809              LDRH     r1,[r1,#0]            ;119  ; OBDataLen
000044  1c49              ADDS     r1,r1,#1              ;119
000046  4b0a              LDR      r3,|L5.112|
000048  8019              STRH     r1,[r3,#0]            ;119
00004a  490a              LDR      r1,|L5.116|
00004c  5488              STRB     r0,[r1,r2]            ;119
00004e  2101              MOVS     r1,#1                 ;120
000050  4a06              LDR      r2,|L5.108|
000052  7011              STRB     r1,[r2,#0]            ;120
000054  e007              B        |L5.102|
                  |L5.86|
000056  4906              LDR      r1,|L5.112|
000058  880a              LDRH     r2,[r1,#0]            ;122  ; OBDataLen
00005a  8809              LDRH     r1,[r1,#0]            ;122  ; OBDataLen
00005c  1c49              ADDS     r1,r1,#1              ;122
00005e  4b04              LDR      r3,|L5.112|
000060  8019              STRH     r1,[r3,#0]            ;122
000062  4904              LDR      r1,|L5.116|
000064  5488              STRB     r0,[r1,r2]            ;122
                  |L5.102|
000066  bf00              NOP      
000068  e7ce              B        |L5.8|
;;;125    
                          ENDP

00006a  0000              DCW      0x0000
                  |L5.108|
                          DCD      OBData_bAvail
                  |L5.112|
                          DCD      OBDataLen
                  |L5.116|
                          DCD      OBData

                          AREA ||i.OBD_RcvDataInit||, CODE, READONLY, ALIGN=2

                  OBD_RcvDataInit PROC
;;;126    
;;;127    void OBD_RcvDataInit(void)
000000  b510              PUSH     {r4,lr}
;;;128    {
;;;129    	OBData_bAvail = bFALSE;
000002  2000              MOVS     r0,#0
000004  4904              LDR      r1,|L6.24|
000006  7008              STRB     r0,[r1,#0]
;;;130    	OBDataLen = 0;
000008  4904              LDR      r1,|L6.28|
00000a  8008              STRH     r0,[r1,#0]
;;;131    	memset( OBData , 0 , OBD_DATA_BUFFER_SIZE);
00000c  21c8              MOVS     r1,#0xc8
00000e  4804              LDR      r0,|L6.32|
000010  f7fffffe          BL       __aeabi_memclr
;;;132    }
000014  bd10              POP      {r4,pc}
;;;133    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      OBData_bAvail
                  |L6.28|
                          DCD      OBDataLen
                  |L6.32|
                          DCD      OBData

                          AREA ||i.OBD_SendData||, CODE, READONLY, ALIGN=2

                  OBD_SendData PROC
;;;134    
;;;135    void OBD_SendData( BYTE * Cmd , INT8U CmdLen)
000000  b570              PUSH     {r4-r6,lr}
;;;136    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;137    	INT8U i;
;;;138    
;;;139    	OBD_RcvDataInit();	
000006  f7fffffe          BL       OBD_RcvDataInit
;;;140    	
;;;141    	for ( i = 0; i < CmdLen; i++ )
00000a  2600              MOVS     r6,#0
00000c  e00d              B        |L7.42|
                  |L7.14|
;;;142    	{
;;;143    		USART_SendData(COM_OBD, *Cmd++);
00000e  f8141b01          LDRB     r1,[r4],#1
000012  4807              LDR      r0,|L7.48|
000014  f7fffffe          BL       USART_SendData
;;;144    		while(USART_GetFlagStatus(COM_OBD, USART_FLAG_TXE) == RESET); //非空等待
000018  bf00              NOP      
                  |L7.26|
00001a  2180              MOVS     r1,#0x80
00001c  4804              LDR      r0,|L7.48|
00001e  f7fffffe          BL       USART_GetFlagStatus
000022  2800              CMP      r0,#0
000024  d0f9              BEQ      |L7.26|
000026  1c70              ADDS     r0,r6,#1              ;141
000028  b2c6              UXTB     r6,r0                 ;141
                  |L7.42|
00002a  42ae              CMP      r6,r5                 ;141
00002c  dbef              BLT      |L7.14|
;;;145    	}
;;;146    }
00002e  bd70              POP      {r4-r6,pc}
;;;147    
                          ENDP

                  |L7.48|
                          DCD      0x40005000

                          AREA ||i.OBD_UART_Enable||, CODE, READONLY, ALIGN=1

                  OBD_UART_Enable PROC
;;;80        Description: 使能OBD接收串口 */
;;;81     void OBD_UART_Enable(void)
000000  b510              PUSH     {r4,lr}
;;;82     {
;;;83     	COM_OBD_INIT(38400);
000002  f44f4016          MOV      r0,#0x9600
000006  f7fffffe          BL       UART5_Init
;;;84     }
00000a  bd10              POP      {r4,pc}
;;;85     
                          ENDP


                          AREA ||i.Open_OBDPower||, CODE, READONLY, ALIGN=2

                  Open_OBDPower PROC
;;;29     /*--- Functions Defination -----------------------------------------------*/
;;;30     void Open_OBDPower(void)
000000  b508              PUSH     {r3,lr}
;;;31     {
;;;32     	/* 推挽输出低电平打开OBD电源 */
;;;33     	GPIO_InitTypeDef GPIO_InitStructure;
;;;34     
;;;35     	RCC_APB2PeriphClockCmd(OBD_POWER_RCC, ENABLE);
000002  2101              MOVS     r1,#1
000004  2008              MOVS     r0,#8
000006  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;36     	 
;;;37     	GPIO_InitStructure.GPIO_Pin = OBD_POWER_PIN;
00000a  2020              MOVS     r0,#0x20
00000c  f8ad0000          STRH     r0,[sp,#0]
;;;38     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
000010  2010              MOVS     r0,#0x10
000012  f88d0003          STRB     r0,[sp,#3]
;;;39     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_2MHz;
000016  2002              MOVS     r0,#2
000018  f88d0002          STRB     r0,[sp,#2]
;;;40     	GPIO_Init(OBD_POWER_PORT, &GPIO_InitStructure);
00001c  4669              MOV      r1,sp
00001e  4804              LDR      r0,|L9.48|
000020  f7fffffe          BL       GPIO_Init
;;;41     
;;;42     	GPIO_ResetBits(OBD_POWER_PORT, OBD_POWER_PIN);    
000024  2120              MOVS     r1,#0x20
000026  4802              LDR      r0,|L9.48|
000028  f7fffffe          BL       GPIO_ResetBits
;;;43     }
00002c  bd08              POP      {r3,pc}
;;;44     
                          ENDP

00002e  0000              DCW      0x0000
                  |L9.48|
                          DCD      0x40010c00

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  OBData
                          %        200

                          AREA ||.data||, DATA, ALIGN=1

                  OBData_bAvail
000000  0000              DCB      0x00,0x00
                  OBDataLen
000002  0000              DCB      0x00,0x00
