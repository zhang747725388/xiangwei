; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\debuguart.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\debuguart.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP -I..\BSP\IWDG -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\App\Debug -I..\App\SelfCheck -I..\App\Voltage -I..\App\ATC30 -I..\App -I..\BSP\uart -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\debuguart.crf ..\Kernel\DebugUart.c]
                          THUMB

                          AREA ||i.DebugUart_Getchar||, CODE, READONLY, ALIGN=2

                  DebugUart_Getchar PROC
;;;97     u16 
;;;98     DebugUart_Getchar(void)
000000  b510              PUSH     {r4,lr}
;;;99     {
;;;100    	while(USART_GetFlagStatus(COM_SYSTEMTEST, USART_FLAG_RXNE) == RESET)  
000002  bf00              NOP      
                  |L1.4|
000004  2120              MOVS     r1,#0x20
000006  4804              LDR      r0,|L1.24|
000008  f7fffffe          BL       USART_GetFlagStatus
00000c  2800              CMP      r0,#0
00000e  d0f9              BEQ      |L1.4|
;;;101    	{
;;;102    	}
;;;103    	return USART_ReceiveData(COM_SYSTEMTEST);	
000010  4801              LDR      r0,|L1.24|
000012  f7fffffe          BL       USART_ReceiveData
;;;104    }
000016  bd10              POP      {r4,pc}
;;;105    
                          ENDP

                  |L1.24|
                          DCD      0x40013800

                          AREA ||i.DebugUart_Interrupt||, CODE, READONLY, ALIGN=2

                  DebugUart_Interrupt PROC
;;;112     */
;;;113    void DebugUart_Interrupt(void)
000000  b570              PUSH     {r4-r6,lr}
;;;114    {
;;;115    	u8 c;
;;;116    	c = (uint8_t)DebugUart_Getchar();
000002  f7fffffe          BL       DebugUart_Getchar
000006  b2c4              UXTB     r4,r0
;;;117    
;;;118    	DebugUart_Putchar(c);
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       DebugUart_Putchar
;;;119    	
;;;120    	if(c == '>')
00000e  2c3e              CMP      r4,#0x3e
000010  d103              BNE      |L2.26|
;;;121    	{
;;;122    		rcvNum = 0;
000012  2000              MOVS     r0,#0
000014  4919              LDR      r1,|L2.124|
000016  6008              STR      r0,[r1,#0]  ; rcvNum
000018  e02e              B        |L2.120|
                  |L2.26|
;;;123    	}
;;;124    	else if(c == '\r')
00001a  2c0d              CMP      r4,#0xd
00001c  d124              BNE      |L2.104|
;;;125    	{
;;;126    		rcvBuf[rcvNum] = '\0';
00001e  2100              MOVS     r1,#0
000020  4817              LDR      r0,|L2.128|
000022  4a16              LDR      r2,|L2.124|
000024  6812              LDR      r2,[r2,#0]  ; rcvNum
000026  5481              STRB     r1,[r0,r2]
;;;127    		if(!strncmp((char*)rcvBuf, cmdBuf[0], strlen(cmdBuf[0])))
000028  4916              LDR      r1,|L2.132|
00002a  6808              LDR      r0,[r1,#0]  ; cmdBuf
00002c  f7fffffe          BL       strlen
000030  4605              MOV      r5,r0
000032  4814              LDR      r0,|L2.132|
000034  462a              MOV      r2,r5
000036  6801              LDR      r1,[r0,#0]  ; cmdBuf
000038  4811              LDR      r0,|L2.128|
00003a  f7fffffe          BL       strncmp
00003e  b918              CBNZ     r0,|L2.72|
;;;128    		{
;;;129    #if 0
;;;130    			Debug_GetOBDStatusNum = bTRUE;
;;;131    #endif		
;;;132    			DebugUart_Putstr("\r\n*******Status_up********\r\n");
000040  a011              ADR      r0,|L2.136|
000042  f7fffffe          BL       DebugUart_Putstr
000046  e017              B        |L2.120|
                  |L2.72|
;;;133    			
;;;134    		}
;;;135    		else if(!strncmp((char*)rcvBuf, cmdBuf[1], strlen(cmdBuf[0])))
000048  490e              LDR      r1,|L2.132|
00004a  6808              LDR      r0,[r1,#0]  ; cmdBuf
00004c  f7fffffe          BL       strlen
000050  4605              MOV      r5,r0
000052  480c              LDR      r0,|L2.132|
000054  462a              MOV      r2,r5
000056  6841              LDR      r1,[r0,#4]  ; cmdBuf
000058  4809              LDR      r0,|L2.128|
00005a  f7fffffe          BL       strncmp
00005e  b958              CBNZ     r0,|L2.120|
;;;136    		{
;;;137    			#if 0   /*调试使用*/
;;;138    			Debug_SPECIALALARM = bTRUE;
;;;139    			#endif
;;;140    			
;;;141    			DebugUart_Putstr("\r\n*******alarm********\r\n");
000060  a011              ADR      r0,|L2.168|
000062  f7fffffe          BL       DebugUart_Putstr
000066  e007              B        |L2.120|
                  |L2.104|
;;;142    		}
;;;143    
;;;144    	}
;;;145    	else 
;;;146    	{
;;;147    		rcvBuf[rcvNum++] = c;
000068  4804              LDR      r0,|L2.124|
00006a  6801              LDR      r1,[r0,#0]  ; rcvNum
00006c  6800              LDR      r0,[r0,#0]  ; rcvNum
00006e  1c40              ADDS     r0,r0,#1
000070  4a02              LDR      r2,|L2.124|
000072  6010              STR      r0,[r2,#0]  ; rcvNum
000074  4802              LDR      r0,|L2.128|
000076  5444              STRB     r4,[r0,r1]
                  |L2.120|
;;;148    	}
;;;149    
;;;150    }
000078  bd70              POP      {r4-r6,pc}
;;;151    
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      rcvNum
                  |L2.128|
                          DCD      rcvBuf
                  |L2.132|
                          DCD      cmdBuf
                  |L2.136|
000088  0d0a2a2a          DCB      "\r\n*******Status_up********\r\n",0
00008c  2a2a2a2a
000090  2a537461
000094  7475735f
000098  75702a2a
00009c  2a2a2a2a
0000a0  2a2a0d0a
0000a4  00      
0000a5  00                DCB      0
0000a6  00                DCB      0
0000a7  00                DCB      0
                  |L2.168|
0000a8  0d0a2a2a          DCB      "\r\n*******alarm********\r\n",0
0000ac  2a2a2a2a
0000b0  2a616c61
0000b4  726d2a2a
0000b8  2a2a2a2a
0000bc  2a2a0d0a
0000c0  00      
0000c1  00                DCB      0
0000c2  00                DCB      0
0000c3  00                DCB      0

                          AREA ||i.DebugUart_Putchar||, CODE, READONLY, ALIGN=2

                  DebugUart_Putchar PROC
;;;39     void 
;;;40     DebugUart_Putchar(uint8_t c)
000000  b510              PUSH     {r4,lr}
;;;41     {
000002  4604              MOV      r4,r0
;;;42     	while(USART_GetFlagStatus(COM_SYSTEMTEST, USART_FLAG_TXE) == RESET)  //等待发送成功
000004  bf00              NOP      
                  |L3.6|
000006  2180              MOVS     r1,#0x80
000008  4804              LDR      r0,|L3.28|
00000a  f7fffffe          BL       USART_GetFlagStatus
00000e  2800              CMP      r0,#0
000010  d0f9              BEQ      |L3.6|
;;;43     	{
;;;44     	}
;;;45     	USART_SendData(COM_SYSTEMTEST, c);	  //发送数据
000012  4621              MOV      r1,r4
000014  4801              LDR      r0,|L3.28|
000016  f7fffffe          BL       USART_SendData
;;;46     }
00001a  bd10              POP      {r4,pc}
;;;47     
                          ENDP

                  |L3.28|
                          DCD      0x40013800

                          AREA ||i.DebugUart_Putdata||, CODE, READONLY, ALIGN=2

                  DebugUart_Putdata PROC
;;;76     void 
;;;77     DebugUart_Putdata(const uint8_t *buf, uint16_t size)
000000  b570              PUSH     {r4-r6,lr}
;;;78     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;79     	if(!buf)  return;   
000006  b904              CBNZ     r4,|L4.10|
                  |L4.8|
;;;80     	while(size-- > 0)
;;;81     	{
;;;82     		while(USART_GetFlagStatus(COM_SYSTEMTEST, USART_FLAG_TXE) == RESET)  //等待发送成功
;;;83     		{
;;;84     		}
;;;85     		USART_SendData(COM_SYSTEMTEST, *buf++);	  //发送数据
;;;86     	}
;;;87     }
000008  bd70              POP      {r4-r6,pc}
                  |L4.10|
00000a  e00b              B        |L4.36|
                  |L4.12|
00000c  bf00              NOP                            ;82
                  |L4.14|
00000e  2180              MOVS     r1,#0x80              ;82
000010  4808              LDR      r0,|L4.52|
000012  f7fffffe          BL       USART_GetFlagStatus
000016  2800              CMP      r0,#0                 ;82
000018  d0f9              BEQ      |L4.14|
00001a  f8141b01          LDRB     r1,[r4],#1            ;85
00001e  4805              LDR      r0,|L4.52|
000020  f7fffffe          BL       USART_SendData
                  |L4.36|
000024  1e28              SUBS     r0,r5,#0              ;80
000026  f1a50101          SUB      r1,r5,#1              ;80
00002a  b28d              UXTH     r5,r1                 ;80
00002c  dcee              BGT      |L4.12|
00002e  bf00              NOP      
000030  e7ea              B        |L4.8|
;;;88     
                          ENDP

000032  0000              DCW      0x0000
                  |L4.52|
                          DCD      0x40013800

                          AREA ||i.DebugUart_Putstr||, CODE, READONLY, ALIGN=2

                  DebugUart_Putstr PROC
;;;54     void 
;;;55     DebugUart_Putstr(const char *str)
000000  b510              PUSH     {r4,lr}
;;;56     {
000002  4604              MOV      r4,r0
;;;57     	if(!str)  return;   
000004  b904              CBNZ     r4,|L5.8|
                  |L5.6|
;;;58     	while(*str)
;;;59     	{
;;;60     		while(USART_GetFlagStatus(COM_SYSTEMTEST, USART_FLAG_TXE) == RESET)  //等待发送成功
;;;61     		{
;;;62     		}
;;;63     		USART_SendData(COM_SYSTEMTEST, (uint16_t)(*str++));	  //发送数据
;;;64     	}
;;;65     }
000006  bd10              POP      {r4,pc}
                  |L5.8|
000008  e00b              B        |L5.34|
                  |L5.10|
00000a  bf00              NOP                            ;60
                  |L5.12|
00000c  2180              MOVS     r1,#0x80              ;60
00000e  4807              LDR      r0,|L5.44|
000010  f7fffffe          BL       USART_GetFlagStatus
000014  2800              CMP      r0,#0                 ;60
000016  d0f9              BEQ      |L5.12|
000018  f8141b01          LDRB     r1,[r4],#1            ;63
00001c  4803              LDR      r0,|L5.44|
00001e  f7fffffe          BL       USART_SendData
                  |L5.34|
000022  7820              LDRB     r0,[r4,#0]            ;58
000024  2800              CMP      r0,#0                 ;58
000026  d1f0              BNE      |L5.10|
000028  bf00              NOP      
00002a  e7ec              B        |L5.6|
;;;66     
                          ENDP

                  |L5.44|
                          DCD      0x40013800

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  rcvBuf
                          %        100

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=0

000000  73746174          DCB      "status_up",0
000004  75735f75
000008  7000    
00000a  616c6172          DCB      "alarm",0
00000e  6d00    

                          AREA ||.data||, DATA, ALIGN=2

                  cmdBuf
                          DCD      ||.conststring||
                          DCD      ||.conststring||+0xa
                          DCD      0x00000000
                  rcvNum
                          DCD      0x00000000
