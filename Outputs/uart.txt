; generated by Component: ARM Compiler 5.05 update 1 (build 106) Tool: ArmCC [4d0efa]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\uart.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\uart.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP -I..\BSP\IWDG -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\App\Debug -I..\App\SelfCheck -I..\App\Voltage -I..\App\ATC30 -I..\App -I..\BSP\uart -I..\App\Task -I..\App\Task -IH:\gitprojecct\xiangwei\Project\RTE -IC:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\1.0.5\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__MICROLIB -D__UVISION_VERSION=514 -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\uart.crf ..\BSP\Basic\uart.c]
                          THUMB

                          AREA ||i.UART1_Init||, CODE, READONLY, ALIGN=2

                  UART1_Init PROC
;;;3      
;;;4      void UART1_Init(INT32U u32BaudRate)
000000  b510              PUSH     {r4,lr}
;;;5      {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;6      
;;;7      
;;;8      	GPIO_InitTypeDef GPIO_InitStructure;
;;;9      	USART_InitTypeDef USART_InitStructure;
;;;10     	
;;;11     	/* GPIO Configuration */
;;;12     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;13     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
00000e  2101              MOVS     r1,#1
000010  0388              LSLS     r0,r1,#14
000012  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;14     	
;;;15     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000016  2018              MOVS     r0,#0x18
000018  f88d0017          STRB     r0,[sp,#0x17]
;;;16     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;
00001c  f44f7000          MOV      r0,#0x200
000020  f8ad0014          STRH     r0,[sp,#0x14]
;;;17     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000024  2003              MOVS     r0,#3
000026  f88d0016          STRB     r0,[sp,#0x16]
;;;18     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00002a  a905              ADD      r1,sp,#0x14
00002c  4814              LDR      r0,|L1.128|
00002e  f7fffffe          BL       GPIO_Init
;;;19     	
;;;20     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000032  2004              MOVS     r0,#4
000034  f88d0017          STRB     r0,[sp,#0x17]
;;;21     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
000038  0200              LSLS     r0,r0,#8
00003a  f8ad0014          STRH     r0,[sp,#0x14]
;;;22     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00003e  a905              ADD      r1,sp,#0x14
000040  480f              LDR      r0,|L1.128|
000042  f7fffffe          BL       GPIO_Init
;;;23     	
;;;24     	/* USART configuration */
;;;25     
;;;26     	USART_InitStructure.USART_BaudRate = u32BaudRate;
000046  9401              STR      r4,[sp,#4]
;;;27     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000048  2000              MOVS     r0,#0
00004a  f8ad0008          STRH     r0,[sp,#8]
;;;28     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00004e  f8ad000a          STRH     r0,[sp,#0xa]
;;;29     	USART_InitStructure.USART_Parity = USART_Parity_No;
000052  f8ad000c          STRH     r0,[sp,#0xc]
;;;30     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000056  f8ad0010          STRH     r0,[sp,#0x10]
;;;31     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
00005a  200c              MOVS     r0,#0xc
00005c  f8ad000e          STRH     r0,[sp,#0xe]
;;;32     	USART_Init(USART1, &USART_InitStructure);
000060  a901              ADD      r1,sp,#4
000062  4808              LDR      r0,|L1.132|
000064  f7fffffe          BL       USART_Init
;;;33     	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);//¿ªÆôÖÐ¶Ï
000068  2201              MOVS     r2,#1
00006a  f2405125          MOV      r1,#0x525
00006e  4805              LDR      r0,|L1.132|
000070  f7fffffe          BL       USART_ITConfig
;;;34     	
;;;35     	USART_Cmd(USART1, ENABLE);				// Enable USART
000074  2101              MOVS     r1,#1
000076  4803              LDR      r0,|L1.132|
000078  f7fffffe          BL       USART_Cmd
;;;36     
;;;37     }
00007c  b006              ADD      sp,sp,#0x18
00007e  bd10              POP      {r4,pc}
;;;38     
                          ENDP

                  |L1.128|
                          DCD      0x40010800
                  |L1.132|
                          DCD      0x40013800

                          AREA ||i.UART2_Init||, CODE, READONLY, ALIGN=2

                  UART2_Init PROC
;;;39     
;;;40     void UART2_Init(INT32U u32BaudRate)
000000  b510              PUSH     {r4,lr}
;;;41     {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;42     
;;;43     	GPIO_InitTypeDef GPIO_InitStructure;
;;;44     	USART_InitTypeDef USART_InitStructure;
;;;45     	
;;;46     	/* GPIO Configuration */
;;;47     	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
000006  2101              MOVS     r1,#1
000008  2004              MOVS     r0,#4
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;48     	RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART2, ENABLE);
00000e  2101              MOVS     r1,#1
000010  0448              LSLS     r0,r1,#17
000012  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;49     		
;;;50     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000016  2018              MOVS     r0,#0x18
000018  f88d0017          STRB     r0,[sp,#0x17]
;;;51     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
00001c  2004              MOVS     r0,#4
00001e  f8ad0014          STRH     r0,[sp,#0x14]
;;;52     	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000022  2003              MOVS     r0,#3
000024  f88d0016          STRB     r0,[sp,#0x16]
;;;53     	GPIO_Init(GPIOA, &GPIO_InitStructure);
000028  a905              ADD      r1,sp,#0x14
00002a  4812              LDR      r0,|L2.116|
00002c  f7fffffe          BL       GPIO_Init
;;;54     	
;;;55     	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000030  2004              MOVS     r0,#4
000032  f88d0017          STRB     r0,[sp,#0x17]
;;;56     	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_3;
000036  2008              MOVS     r0,#8
000038  f8ad0014          STRH     r0,[sp,#0x14]
;;;57     	GPIO_Init(GPIOA, &GPIO_InitStructure);
00003c  a905              ADD      r1,sp,#0x14
00003e  480d              LDR      r0,|L2.116|
000040  f7fffffe          BL       GPIO_Init
;;;58     	
;;;59     	/* USART configuration */
;;;60     	USART_InitStructure.USART_BaudRate = u32BaudRate;
000044  9401              STR      r4,[sp,#4]
;;;61     	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000046  2000              MOVS     r0,#0
000048  f8ad0008          STRH     r0,[sp,#8]
;;;62     	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00004c  f8ad000a          STRH     r0,[sp,#0xa]
;;;63     	USART_InitStructure.USART_Parity = USART_Parity_No;
000050  f8ad000c          STRH     r0,[sp,#0xc]
;;;64     	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000054  f8ad0010          STRH     r0,[sp,#0x10]
;;;65     	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
000058  200c              MOVS     r0,#0xc
00005a  f8ad000e          STRH     r0,[sp,#0xe]
;;;66     	USART_Init(USART2, &USART_InitStructure);
00005e  a901              ADD      r1,sp,#4
000060  4805              LDR      r0,|L2.120|
000062  f7fffffe          BL       USART_Init
;;;67     	
;;;68     	USART_Cmd(USART2, ENABLE);				// Enable USART
000066  2101              MOVS     r1,#1
000068  4803              LDR      r0,|L2.120|
00006a  f7fffffe          BL       USART_Cmd
;;;69     
;;;70     }
00006e  b006              ADD      sp,sp,#0x18
000070  bd10              POP      {r4,pc}
;;;71     
                          ENDP

000072  0000              DCW      0x0000
                  |L2.116|
                          DCD      0x40010800
                  |L2.120|
                          DCD      0x40004400

                          AREA ||i.UART3_Init||, CODE, READONLY, ALIGN=2

                  UART3_Init PROC
;;;72     
;;;73     void UART3_Init(INT32U u32BaudRate)
000000  b510              PUSH     {r4,lr}
;;;74     {	
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;75     		GPIO_InitTypeDef GPIO_InitStructure;
;;;76     		USART_InitTypeDef USART_InitStructure;
;;;77     		
;;;78     		/* GPIO Configuration */
;;;79     		RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
000006  2101              MOVS     r1,#1
000008  2008              MOVS     r0,#8
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;80     	  RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
00000e  2101              MOVS     r1,#1
000010  0488              LSLS     r0,r1,#18
000012  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;81     		
;;;82     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000016  2018              MOVS     r0,#0x18
000018  f88d0017          STRB     r0,[sp,#0x17]
;;;83     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
00001c  f44f6080          MOV      r0,#0x400
000020  f8ad0014          STRH     r0,[sp,#0x14]
;;;84     		GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000024  2003              MOVS     r0,#3
000026  f88d0016          STRB     r0,[sp,#0x16]
;;;85     		GPIO_Init(GPIOB, &GPIO_InitStructure);
00002a  a905              ADD      r1,sp,#0x14
00002c  4811              LDR      r0,|L3.116|
00002e  f7fffffe          BL       GPIO_Init
;;;86     		
;;;87     		GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000032  2004              MOVS     r0,#4
000034  f88d0017          STRB     r0,[sp,#0x17]
;;;88     		GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
000038  0240              LSLS     r0,r0,#9
00003a  f8ad0014          STRH     r0,[sp,#0x14]
;;;89     		GPIO_Init(GPIOB, &GPIO_InitStructure);
00003e  a905              ADD      r1,sp,#0x14
000040  480c              LDR      r0,|L3.116|
000042  f7fffffe          BL       GPIO_Init
;;;90     
;;;91     		USART_InitStructure.USART_BaudRate = u32BaudRate;
000046  9401              STR      r4,[sp,#4]
;;;92     		USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000048  2000              MOVS     r0,#0
00004a  f8ad0008          STRH     r0,[sp,#8]
;;;93     		USART_InitStructure.USART_StopBits = USART_StopBits_1;
00004e  f8ad000a          STRH     r0,[sp,#0xa]
;;;94     		USART_InitStructure.USART_Parity = USART_Parity_No;
000052  f8ad000c          STRH     r0,[sp,#0xc]
;;;95     		USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000056  f8ad0010          STRH     r0,[sp,#0x10]
;;;96     		USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
00005a  200c              MOVS     r0,#0xc
00005c  f8ad000e          STRH     r0,[sp,#0xe]
;;;97     		USART_Init(USART3, &USART_InitStructure);
000060  a901              ADD      r1,sp,#4
000062  4805              LDR      r0,|L3.120|
000064  f7fffffe          BL       USART_Init
;;;98     		
;;;99     		USART_Cmd(USART3, ENABLE);				// Enable USART
000068  2101              MOVS     r1,#1
00006a  4803              LDR      r0,|L3.120|
00006c  f7fffffe          BL       USART_Cmd
;;;100    
;;;101    }
000070  b006              ADD      sp,sp,#0x18
000072  bd10              POP      {r4,pc}
;;;102    
                          ENDP

                  |L3.116|
                          DCD      0x40010c00
                  |L3.120|
                          DCD      0x40004800

                          AREA ||i.UART4_Init||, CODE, READONLY, ALIGN=2

                  UART4_Init PROC
;;;103    
;;;104    void UART4_Init(INT32U u32BaudRate)
000000  b510              PUSH     {r4,lr}
;;;105    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;106    
;;;107    	GPIO_InitTypeDef GPIO_InitStructure;
;;;108    	USART_InitTypeDef USART_InitStructure;
;;;109    	
;;;110    	/* GPIO Configuration */
;;;111    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
000006  2101              MOVS     r1,#1
000008  2010              MOVS     r0,#0x10
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;112    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_UART4, ENABLE);
00000e  2101              MOVS     r1,#1
000010  04c8              LSLS     r0,r1,#19
000012  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;113    	
;;;114    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000016  2018              MOVS     r0,#0x18
000018  f88d0017          STRB     r0,[sp,#0x17]
;;;115    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;
00001c  f44f6080          MOV      r0,#0x400
000020  f8ad0014          STRH     r0,[sp,#0x14]
;;;116    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000024  2003              MOVS     r0,#3
000026  f88d0016          STRB     r0,[sp,#0x16]
;;;117    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00002a  a905              ADD      r1,sp,#0x14
00002c  4811              LDR      r0,|L4.116|
00002e  f7fffffe          BL       GPIO_Init
;;;118    	
;;;119    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000032  2004              MOVS     r0,#4
000034  f88d0017          STRB     r0,[sp,#0x17]
;;;120    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;
000038  0240              LSLS     r0,r0,#9
00003a  f8ad0014          STRH     r0,[sp,#0x14]
;;;121    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00003e  a905              ADD      r1,sp,#0x14
000040  480c              LDR      r0,|L4.116|
000042  f7fffffe          BL       GPIO_Init
;;;122    	
;;;123    	/* USART configuration */
;;;124    
;;;125    
;;;126    	USART_InitStructure.USART_BaudRate = u32BaudRate;
000046  9401              STR      r4,[sp,#4]
;;;127    	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000048  2000              MOVS     r0,#0
00004a  f8ad0008          STRH     r0,[sp,#8]
;;;128    	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00004e  f8ad000a          STRH     r0,[sp,#0xa]
;;;129    	USART_InitStructure.USART_Parity = USART_Parity_No;
000052  f8ad000c          STRH     r0,[sp,#0xc]
;;;130    	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000056  f8ad0010          STRH     r0,[sp,#0x10]
;;;131    	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
00005a  200c              MOVS     r0,#0xc
00005c  f8ad000e          STRH     r0,[sp,#0xe]
;;;132    	USART_Init(UART4, &USART_InitStructure);
000060  a901              ADD      r1,sp,#4
000062  4805              LDR      r0,|L4.120|
000064  f7fffffe          BL       USART_Init
;;;133    	
;;;134    	USART_Cmd(UART4, ENABLE);				// Enable USART
000068  2101              MOVS     r1,#1
00006a  4803              LDR      r0,|L4.120|
00006c  f7fffffe          BL       USART_Cmd
;;;135    
;;;136    
;;;137    }
000070  b006              ADD      sp,sp,#0x18
000072  bd10              POP      {r4,pc}
;;;138    
                          ENDP

                  |L4.116|
                          DCD      0x40011000
                  |L4.120|
                          DCD      0x40004c00

                          AREA ||i.UART5_Init||, CODE, READONLY, ALIGN=2

                  UART5_Init PROC
;;;139    
;;;140    void UART5_Init(INT32U u32BaudRate)
000000  b510              PUSH     {r4,lr}
;;;141    {
000002  b086              SUB      sp,sp,#0x18
000004  4604              MOV      r4,r0
;;;142    
;;;143    	GPIO_InitTypeDef GPIO_InitStructure;
;;;144    	USART_InitTypeDef USART_InitStructure;
;;;145    	
;;;146    	/* GPIO Configuration */
;;;147    	RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC | RCC_APB2Periph_GPIOD, ENABLE);
000006  2101              MOVS     r1,#1
000008  2030              MOVS     r0,#0x30
00000a  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;148    	RCC_APB1PeriphClockCmd(RCC_APB1Periph_UART5, ENABLE);
00000e  2101              MOVS     r1,#1
000010  0508              LSLS     r0,r1,#20
000012  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;149    	
;;;150    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
000016  2018              MOVS     r0,#0x18
000018  f88d0017          STRB     r0,[sp,#0x17]
;;;151    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;
00001c  f44f5080          MOV      r0,#0x1000
000020  f8ad0014          STRH     r0,[sp,#0x14]
;;;152    	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
000024  2003              MOVS     r0,#3
000026  f88d0016          STRB     r0,[sp,#0x16]
;;;153    	GPIO_Init(GPIOC, &GPIO_InitStructure);
00002a  a905              ADD      r1,sp,#0x14
00002c  4811              LDR      r0,|L5.116|
00002e  f7fffffe          BL       GPIO_Init
;;;154    	
;;;155    	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
000032  2004              MOVS     r0,#4
000034  f88d0017          STRB     r0,[sp,#0x17]
;;;156    	GPIO_InitStructure.GPIO_Pin = GPIO_Pin_2;
000038  f8ad0014          STRH     r0,[sp,#0x14]
;;;157    	GPIO_Init(GPIOD, &GPIO_InitStructure);
00003c  a905              ADD      r1,sp,#0x14
00003e  480e              LDR      r0,|L5.120|
000040  f7fffffe          BL       GPIO_Init
;;;158    	
;;;159    	/* USART configuration */
;;;160    
;;;161    	USART_InitStructure.USART_BaudRate = u32BaudRate;
000044  9401              STR      r4,[sp,#4]
;;;162    	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000046  2000              MOVS     r0,#0
000048  f8ad0008          STRH     r0,[sp,#8]
;;;163    	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00004c  f8ad000a          STRH     r0,[sp,#0xa]
;;;164    	USART_InitStructure.USART_Parity = USART_Parity_No;
000050  f8ad000c          STRH     r0,[sp,#0xc]
;;;165    	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000054  f8ad0010          STRH     r0,[sp,#0x10]
;;;166    	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
000058  200c              MOVS     r0,#0xc
00005a  f8ad000e          STRH     r0,[sp,#0xe]
;;;167    	USART_Init(UART5, &USART_InitStructure);
00005e  a901              ADD      r1,sp,#4
000060  4806              LDR      r0,|L5.124|
000062  f7fffffe          BL       USART_Init
;;;168    	
;;;169    	USART_Cmd(UART5, ENABLE);				// Enable USART
000066  2101              MOVS     r1,#1
000068  4804              LDR      r0,|L5.124|
00006a  f7fffffe          BL       USART_Cmd
;;;170    
;;;171    }
00006e  b006              ADD      sp,sp,#0x18
000070  bd10              POP      {r4,pc}
;;;172    
                          ENDP

000072  0000              DCW      0x0000
                  |L5.116|
                          DCD      0x40011000
                  |L5.120|
                          DCD      0x40011400
                  |L5.124|
                          DCD      0x40005000

                          AREA ||i.UART_Config_RxInterrupt||, CODE, READONLY, ALIGN=1

                  UART_Config_RxInterrupt PROC
;;;175    // 'state' can be ENABLE,DISABLE
;;;176    void UART_Config_RxInterrupt(USART_TypeDef * uart, FunctionalState state)
000000  b570              PUSH     {r4-r6,lr}
;;;177    {	
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
;;;178    	USART_ITConfig(uart, USART_IT_RXNE, state);
000006  4622              MOV      r2,r4
000008  f2405125          MOV      r1,#0x525
00000c  4628              MOV      r0,r5
00000e  f7fffffe          BL       USART_ITConfig
;;;179    }
000012  bd70              POP      {r4-r6,pc}
;;;180    
                          ENDP


                          AREA ||i.UART_SendDataBlock||, CODE, READONLY, ALIGN=1

                  UART_SendDataBlock PROC
;;;181    
;;;182    void UART_SendDataBlock(USART_TypeDef *USART,  BYTE *cpData, INT32U u32Count)
000000  b570              PUSH     {r4-r6,lr}
;;;183    {   
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;184    	while(u32Count--)
000008  e009              B        |L7.30|
                  |L7.10|
;;;185    	{
;;;186    		while (USART_GetFlagStatus(USART, USART_FLAG_TC) == RESET)				 
00000a  bf00              NOP      
                  |L7.12|
00000c  2140              MOVS     r1,#0x40
00000e  4628              MOV      r0,r5
000010  f7fffffe          BL       USART_GetFlagStatus
000014  2800              CMP      r0,#0
000016  d0f9              BEQ      |L7.12|
;;;187    		{;}
;;;188    		USART->DR = (*cpData++ & (INT16U)0x01FF);	
000018  f8140b01          LDRB     r0,[r4],#1
00001c  80a8              STRH     r0,[r5,#4]
                  |L7.30|
00001e  0030              MOVS     r0,r6                 ;184
000020  f1a60601          SUB      r6,r6,#1              ;184
000024  d1f1              BNE      |L7.10|
;;;189    	}
;;;190    }
000026  bd70              POP      {r4-r6,pc}
                          ENDP

