; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\outputs\sleep.o --asm_dir=..\Outputs\ --list_dir=..\Outputs\ --depend=..\outputs\sleep.d --cpu=Cortex-M3 --apcs=interwork -O0 -I..\CMSIS -I..\Library\inc -I..\Library\STM32_USB-FS-Device_Driver\inc -I..\Kernel -I..\BSP\Basic -I..\BSP\GPS -I..\BSP\Sim900A -I..\BSP -I..\BSP\IWDG -I..\BSP\BlueTooth -I..\BSP\Led -I..\BSP\Key -I..\BSP\ADC -I..\BSP\Adxl345 -I..\BSP\TL718 -I..\BSP\PAM8403 -I..\BSP\W25X16 -I..\BSP\USB -I..\App\Debug -I..\App\SelfCheck -I..\App\GPSTask -I..\App\OBD -I..\App\Mems -I..\App\Voltage -I..\App\LKClient -I..\App\Paramlist -I..\App\ATC30 -I..\App -I..\BSP\mpu6050 -I..\App\mid-proc -I..\App\mpu6050Task -I..\BSP\dmp -I..\BSP\Bluetooth -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\ST\STM32F10x -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DSTM32F10X_HD -DUSE_STM3210C_EVAL -DHXZ_RELEASE_VERSION --omf_browse=..\outputs\sleep.crf ..\App\LKClient\sleep.c]
                          THUMB

                          AREA ||i.Sleep_Init||, CODE, READONLY, ALIGN=2

                  Sleep_Init PROC
;;;48     /*-------------------------------------------------------------------------*/
;;;49     void Sleep_Init(void)
000000  b510              PUSH     {r4,lr}
;;;50     {
;;;51     	Timer_Set(&SleepTim, (SLEEP_WAIT_TIME * 1000 / 2 ) );
000002  f64e2160          MOV      r1,#0xea60
000006  4803              LDR      r0,|L1.20|
000008  f7fffffe          BL       Timer_Set
;;;52     	SleepSta = Waking;
00000c  2001              MOVS     r0,#1
00000e  4902              LDR      r1,|L1.24|
000010  7008              STRB     r0,[r1,#0]
;;;53     }
000012  bd10              POP      {r4,pc}
;;;54     
                          ENDP

                  |L1.20|
                          DCD      SleepTim
                  |L1.24|
                          DCD      SleepSta

                          AREA ||i.Sleep_Task||, CODE, READONLY, ALIGN=2

                  Sleep_Task PROC
;;;55     
;;;56     void Sleep_Task(void)
000000  b510              PUSH     {r4,lr}
;;;57     {
;;;58     	switch (SleepSta)
000002  4828              LDR      r0,|L2.164|
000004  7800              LDRB     r0,[r0,#0]  ; SleepSta
000006  2801              CMP      r0,#1
000008  d004              BEQ      |L2.20|
00000a  2802              CMP      r0,#2
00000c  d02a              BEQ      |L2.100|
00000e  2803              CMP      r0,#3
000010  d144              BNE      |L2.156|
000012  e030              B        |L2.118|
                  |L2.20|
;;;59     	{
;;;60     		case (Waking):
;;;61     			Sleep_LastOBDSta = Sleep_NowOBDSta;
000014  4824              LDR      r0,|L2.168|
000016  7800              LDRB     r0,[r0,#0]  ; Sleep_NowOBDSta
000018  4924              LDR      r1,|L2.172|
00001a  7008              STRB     r0,[r1,#0]
;;;62     			Sleep_NowOBDSta = OBD_GetStatus();
00001c  f7fffffe          BL       OBD_GetStatus
000020  4921              LDR      r1,|L2.168|
000022  7008              STRB     r0,[r1,#0]
;;;63     			if(Sleep_NowOBDSta == OBD_Stop && Sleep_LastOBDSta == OBD_Run){
000024  4608              MOV      r0,r1
000026  7800              LDRB     r0,[r0,#0]  ; Sleep_NowOBDSta
000028  2802              CMP      r0,#2
00002a  d10b              BNE      |L2.68|
00002c  481f              LDR      r0,|L2.172|
00002e  7800              LDRB     r0,[r0,#0]  ; Sleep_LastOBDSta
000030  2801              CMP      r0,#1
000032  d107              BNE      |L2.68|
;;;64     				SleepSta = PreSleep;
000034  2002              MOVS     r0,#2
000036  491b              LDR      r1,|L2.164|
000038  7008              STRB     r0,[r1,#0]
;;;65     				Timer_Set(&SleepTim, SLEEP_WAIT_TIME * 1000);
00003a  491d              LDR      r1,|L2.176|
00003c  481d              LDR      r0,|L2.180|
00003e  f7fffffe          BL       Timer_Set
000042  e00e              B        |L2.98|
                  |L2.68|
;;;66     			}
;;;67     			else if((Sleep_NowOBDSta == OBD_Stop ) && (Sleep_LastOBDSta == OBD_Stop) ){
000044  4818              LDR      r0,|L2.168|
000046  7800              LDRB     r0,[r0,#0]  ; Sleep_NowOBDSta
000048  2802              CMP      r0,#2
00004a  d10a              BNE      |L2.98|
00004c  4817              LDR      r0,|L2.172|
00004e  7800              LDRB     r0,[r0,#0]  ; Sleep_LastOBDSta
000050  2802              CMP      r0,#2
000052  d106              BNE      |L2.98|
;;;68     
;;;69     				    
;;;70     				if(read_QuietTwo() == 1){
000054  f7fffffe          BL       read_QuietTwo
000058  2801              CMP      r0,#1
00005a  d102              BNE      |L2.98|
;;;71     					SleepSta = PreSleep;
00005c  2002              MOVS     r0,#2
00005e  4911              LDR      r1,|L2.164|
000060  7008              STRB     r0,[r1,#0]
                  |L2.98|
;;;72     				// Timer_Set(&SleepTim, (SLEEP_WAIT_TIME * 1000 / 2 ) );
;;;73     				}
;;;74     			}
;;;75     			break;
000062  e01c              B        |L2.158|
                  |L2.100|
;;;76     			
;;;77     		case (PreSleep):
;;;78     			 if(Timer_GetReached(&SleepTim) == bTRUE){
000064  4813              LDR      r0,|L2.180|
000066  f7fffffe          BL       Timer_GetReached
00006a  2801              CMP      r0,#1
00006c  d102              BNE      |L2.116|
;;;79     				SleepSta = Sleep;
00006e  2003              MOVS     r0,#3
000070  490c              LDR      r1,|L2.164|
000072  7008              STRB     r0,[r1,#0]
                  |L2.116|
;;;80     	  	 }
;;;81     			break;
000074  e013              B        |L2.158|
                  |L2.118|
;;;82     			
;;;83     		case (Sleep):
;;;84     			if(IsLKClientPowerOff() == bTRUE){
000076  f7fffffe          BL       IsLKClientPowerOff
00007a  2801              CMP      r0,#1
00007c  d10d              BNE      |L2.154|
;;;85     				RCC_APB1PeriphClockCmd( RCC_APB1Periph_BKP | RCC_APB1Periph_PWR , ENABLE );	  	 
00007e  2101              MOVS     r1,#1
000080  f04f50c0          MOV      r0,#0x18000000
000084  f7fffffe          BL       RCC_APB1PeriphClockCmd
;;;86     				PWR_BackupAccessCmd(ENABLE);
000088  2001              MOVS     r0,#1
00008a  f7fffffe          BL       PWR_BackupAccessCmd
;;;87     				Init_WakeupPort();	
00008e  f7fffffe          BL       Init_WakeupPort
;;;88     				/* MEMS SET THRESHOLD */
;;;89     				mpu_set_motion_int();
000092  f7fffffe          BL       mpu_set_motion_int
;;;90     
;;;91     				PWR_EnterSTANDBYMode();	
000096  f7fffffe          BL       PWR_EnterSTANDBYMode
                  |L2.154|
;;;92     			}
;;;93     			break;
00009a  e000              B        |L2.158|
                  |L2.156|
;;;94     		
;;;95     		default:
;;;96     			break;
00009c  bf00              NOP      
                  |L2.158|
00009e  bf00              NOP                            ;75
;;;97     
;;;98     	}
;;;99     }
0000a0  bd10              POP      {r4,pc}
;;;100    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L2.164|
                          DCD      SleepSta
                  |L2.168|
                          DCD      Sleep_NowOBDSta
                  |L2.172|
                          DCD      Sleep_LastOBDSta
                  |L2.176|
                          DCD      0x0001d4c0
                  |L2.180|
                          DCD      SleepTim

                          AREA ||.data||, DATA, ALIGN=2

                  SleepSta
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  SleepTim
                          %        8
                  Sleep_NowOBDSta
00000c  00                DCB      0x00
                  Sleep_LastOBDSta
00000d  000000            DCB      0x00,0x00,0x00
                  Sleep_X_ACC
                          DCD      0x00000000
                  Sleep_Y_ACC
                          DCD      0x00000000
                  Sleep_Z_ACC
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\App\\LKClient\\sleep.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |ATC30_Reset|
#line 37
|ATC30_Reset| PROC
#line 38

 MOV R0, #1  
 MSR FAULTMASK, R0  
 LDR R0, =0xE000ED0C  
 LDR R1, =0x05FA0004  
 STR R1, [R0]  
 B .  
	ENDP

;*** End   embedded assembler ***
